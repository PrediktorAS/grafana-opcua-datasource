// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: backend.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Pluginv2 {

  /// <summary>Holder for reflection information generated from backend.proto</summary>
  public static partial class BackendReflection {

    #region Descriptor
    /// <summary>File descriptor for backend.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BackendReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1iYWNrZW5kLnByb3RvEghwbHVnaW52MhobZ29vZ2xlL3Byb3RvYnVmL2Vt",
            "cHR5LnByb3RvIooBChBEYXRhU291cmNlQ29uZmlnEgoKAmlkGAQgASgDEgwK",
            "BG5hbWUYBSABKAkSCwoDdXJsGAYgASgJEgwKBHVzZXIYByABKAkSEAoIZGF0",
            "YWJhc2UYCCABKAkSGAoQYmFzaWNBdXRoRW5hYmxlZBgJIAEoCBIVCg1iYXNp",
            "Y0F1dGhVc2VyGAogASgJIrQCCgxQbHVnaW5Db25maWcSDQoFb3JnSWQYASAB",
            "KAMSEAoIcGx1Z2luSWQYAiABKAkSEgoKcGx1Z2luVHlwZRgDIAEoCRIQCghq",
            "c29uRGF0YRgEIAEoDBJUChdkZWNyeXB0ZWRTZWN1cmVKc29uRGF0YRgFIAMo",
            "CzIzLnBsdWdpbnYyLlBsdWdpbkNvbmZpZy5EZWNyeXB0ZWRTZWN1cmVKc29u",
            "RGF0YUVudHJ5EhEKCXVwZGF0ZWRNUxgGIAEoAxI0ChBkYXRhc291cmNlQ29u",
            "ZmlnGAcgASgLMhoucGx1Z2ludjIuRGF0YVNvdXJjZUNvbmZpZxo+ChxEZWNy",
            "eXB0ZWRTZWN1cmVKc29uRGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1",
            "ZRgCIAEoCToCOAEiMwoJVGltZVJhbmdlEhMKC2Zyb21FcG9jaE1TGAEgASgD",
            "EhEKCXRvRXBvY2hNUxgCIAEoAyJ7CglEYXRhUXVlcnkSDQoFcmVmSWQYASAB",
            "KAkSFQoNbWF4RGF0YVBvaW50cxgCIAEoAxISCgppbnRlcnZhbE1TGAMgASgD",
            "EiYKCXRpbWVSYW5nZRgEIAEoCzITLnBsdWdpbnYyLlRpbWVSYW5nZRIMCgRq",
            "c29uGAUgASgMIsoBChBEYXRhUXVlcnlSZXF1ZXN0EiYKBmNvbmZpZxgBIAEo",
            "CzIWLnBsdWdpbnYyLlBsdWdpbkNvbmZpZxI4CgdoZWFkZXJzGAIgAygLMicu",
            "cGx1Z2ludjIuRGF0YVF1ZXJ5UmVxdWVzdC5IZWFkZXJzRW50cnkSJAoHcXVl",
            "cmllcxgDIAMoCzITLnBsdWdpbnYyLkRhdGFRdWVyeRouCgxIZWFkZXJzRW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKRAQoRRGF0YVF1",
            "ZXJ5UmVzcG9uc2USDgoGZnJhbWVzGAEgAygMEjsKCG1ldGFkYXRhGAIgAygL",
            "MikucGx1Z2ludjIuRGF0YVF1ZXJ5UmVzcG9uc2UuTWV0YWRhdGFFbnRyeRov",
            "Cg1NZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToC",
            "OAEi5QMKDENhbGxSZXNvdXJjZRocCgpTdHJpbmdMaXN0Eg4KBnZhbHVlcxgB",
            "IAMoCRr7AQoHUmVxdWVzdBImCgZjb25maWcYASABKAsyFi5wbHVnaW52Mi5Q",
            "bHVnaW5Db25maWcSDAoEcGF0aBgCIAEoCRIOCgZtZXRob2QYAyABKAkSCwoD",
            "dXJsGAQgASgJEjwKB2hlYWRlcnMYBSADKAsyKy5wbHVnaW52Mi5DYWxsUmVz",
            "b3VyY2UuUmVxdWVzdC5IZWFkZXJzRW50cnkSDAoEYm9keRgGIAEoDBpRCgxI",
            "ZWFkZXJzRW50cnkSCwoDa2V5GAEgASgJEjAKBXZhbHVlGAIgASgLMiEucGx1",
            "Z2ludjIuQ2FsbFJlc291cmNlLlN0cmluZ0xpc3Q6AjgBGrgBCghSZXNwb25z",
            "ZRIMCgRjb2RlGAEgASgFEj0KB2hlYWRlcnMYAiADKAsyLC5wbHVnaW52Mi5D",
            "YWxsUmVzb3VyY2UuUmVzcG9uc2UuSGVhZGVyc0VudHJ5EgwKBGJvZHkYAyAB",
            "KAwaUQoMSGVhZGVyc0VudHJ5EgsKA2tleRgBIAEoCRIwCgV2YWx1ZRgCIAEo",
            "CzIhLnBsdWdpbnYyLkNhbGxSZXNvdXJjZS5TdHJpbmdMaXN0OgI4ASJ5Cg5D",
            "b2xsZWN0TWV0cmljcxoJCgdSZXF1ZXN0Gh0KB1BheWxvYWQSEgoKcHJvbWV0",
            "aGV1cxgBIAEoDBo9CghSZXNwb25zZRIxCgdtZXRyaWNzGAEgASgLMiAucGx1",
            "Z2ludjIuQ29sbGVjdE1ldHJpY3MuUGF5bG9hZCKgAQoLQ2hlY2tIZWFsdGga",
            "CQoHUmVxdWVzdBqFAQoIUmVzcG9uc2USOwoGc3RhdHVzGAEgASgOMisucGx1",
            "Z2ludjIuQ2hlY2tIZWFsdGguUmVzcG9uc2UuSGVhbHRoU3RhdHVzEgwKBGlu",
            "Zm8YAiABKAkiLgoMSGVhbHRoU3RhdHVzEgsKB1VOS05PV04QABIGCgJPSxAB",
            "EgkKBUVSUk9SEAIivwEKEFN0cmVhbWluZ1JlcXVlc3QSEAoIcGx1Z2luSWQY",
            "ASABKAMSOAoHaGVhZGVycxgCIAMoCzInLnBsdWdpbnYyLlN0cmVhbWluZ1Jl",
            "cXVlc3QuSGVhZGVyc0VudHJ5Eg0KBXRvcGljGAMgASgJEgwKBGJvZHkYBCAB",
            "KAkSEgoKc3Vic2NyaWJlZBgFIAEoCBouCgxIZWFkZXJzRW50cnkSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJEChBTdHJlYW1pbmdNZXNzYWdl",
            "EhAKCHBsdWdpbklkGAEgASgDEg0KBXRvcGljGAIgASgJEg8KB21lc3NhZ2UY",
            "AyABKAkiHwoOU3RyZWFtaW5nQ2xvc2USDQoFY291bnQYASABKAMipQEKDVJl",
            "bmRlclJlcXVlc3QSCwoDdXJsGAEgASgJEg0KBXdpZHRoGAIgASgFEg4KBmhl",
            "aWdodBgDIAEoBRIPCgd0aW1lb3V0GAQgASgFEhAKCHRpbWV6b25lGAUgASgJ",
            "EhAKCGVuY29kaW5nGAYgASgJEhAKCGZpbGVQYXRoGAcgASgJEhEKCXJlbmRl",
            "cktleRgIIAEoCRIOCgZkb21haW4YCSABKAkiHwoOUmVuZGVyUmVzcG9uc2US",
            "DQoFZXJyb3IYASABKAkynQEKBENvcmUSTwoMQ2FsbFJlc291cmNlEh4ucGx1",
            "Z2ludjIuQ2FsbFJlc291cmNlLlJlcXVlc3QaHy5wbHVnaW52Mi5DYWxsUmVz",
            "b3VyY2UuUmVzcG9uc2USRAoJRGF0YVF1ZXJ5EhoucGx1Z2ludjIuRGF0YVF1",
            "ZXJ5UmVxdWVzdBobLnBsdWdpbnYyLkRhdGFRdWVyeVJlc3BvbnNlMrIBCgtE",
            "aWFnbm9zdGljcxJVCg5Db2xsZWN0TWV0cmljcxIgLnBsdWdpbnYyLkNvbGxl",
            "Y3RNZXRyaWNzLlJlcXVlc3QaIS5wbHVnaW52Mi5Db2xsZWN0TWV0cmljcy5S",
            "ZXNwb25zZRJMCgtDaGVja0hlYWx0aBIdLnBsdWdpbnYyLkNoZWNrSGVhbHRo",
            "LlJlcXVlc3QaHi5wbHVnaW52Mi5DaGVja0hlYWx0aC5SZXNwb25zZTKkAQoP",
            "R3JhZmFuYVBsYXRmb3JtEksKCFJlc291cmNlEh4ucGx1Z2ludjIuQ2FsbFJl",
            "c291cmNlLlJlcXVlc3QaHy5wbHVnaW52Mi5DYWxsUmVzb3VyY2UuUmVzcG9u",
            "c2USRAoJRGF0YVF1ZXJ5EhoucGx1Z2ludjIuRGF0YVF1ZXJ5UmVxdWVzdBob",
            "LnBsdWdpbnYyLkRhdGFRdWVyeVJlc3BvbnNlMlEKCVRyYW5zZm9ybRJECglE",
            "YXRhUXVlcnkSGi5wbHVnaW52Mi5EYXRhUXVlcnlSZXF1ZXN0GhsucGx1Z2lu",
            "djIuRGF0YVF1ZXJ5UmVzcG9uc2UyWQoRVHJhbnNmb3JtQ2FsbEJhY2sSRAoJ",
            "RGF0YVF1ZXJ5EhoucGx1Z2ludjIuRGF0YVF1ZXJ5UmVxdWVzdBobLnBsdWdp",
            "bnYyLkRhdGFRdWVyeVJlc3BvbnNlMtUBCg9TdHJlYW1pbmdQbHVnaW4SPwoH",
            "Q29ubmVjdBIWLnBsdWdpbnYyLlBsdWdpbkNvbmZpZxoaLnBsdWdpbnYyLlN0",
            "cmVhbWluZ01lc3NhZ2UwARJBCgdQcm9jZXNzEhoucGx1Z2ludjIuU3RyZWFt",
            "aW5nUmVxdWVzdBoaLnBsdWdpbnYyLlN0cmVhbWluZ01lc3NhZ2USPgoKRGlz",
            "Y29ubmVjdBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoYLnBsdWdpbnYyLlN0",
            "cmVhbWluZ0Nsb3NlMkcKCFJlbmRlcmVyEjsKBlJlbmRlchIXLnBsdWdpbnYy",
            "LlJlbmRlclJlcXVlc3QaGC5wbHVnaW52Mi5SZW5kZXJSZXNwb25zZWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.DataSourceConfig), global::Pluginv2.DataSourceConfig.Parser, new[]{ "Id", "Name", "Url", "User", "Database", "BasicAuthEnabled", "BasicAuthUser" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.PluginConfig), global::Pluginv2.PluginConfig.Parser, new[]{ "OrgId", "PluginId", "PluginType", "JsonData", "DecryptedSecureJsonData", "UpdatedMS", "DatasourceConfig" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.TimeRange), global::Pluginv2.TimeRange.Parser, new[]{ "FromEpochMS", "ToEpochMS" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.DataQuery), global::Pluginv2.DataQuery.Parser, new[]{ "RefId", "MaxDataPoints", "IntervalMS", "TimeRange", "Json" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.DataQueryRequest), global::Pluginv2.DataQueryRequest.Parser, new[]{ "Config", "Headers", "Queries" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.DataQueryResponse), global::Pluginv2.DataQueryResponse.Parser, new[]{ "Frames", "Metadata" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.CallResource), global::Pluginv2.CallResource.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.CallResource.Types.StringList), global::Pluginv2.CallResource.Types.StringList.Parser, new[]{ "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.CallResource.Types.Request), global::Pluginv2.CallResource.Types.Request.Parser, new[]{ "Config", "Path", "Method", "Url", "Headers", "Body" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.CallResource.Types.Response), global::Pluginv2.CallResource.Types.Response.Parser, new[]{ "Code", "Headers", "Body" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.CollectMetrics), global::Pluginv2.CollectMetrics.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.CollectMetrics.Types.Request), global::Pluginv2.CollectMetrics.Types.Request.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.CollectMetrics.Types.Payload), global::Pluginv2.CollectMetrics.Types.Payload.Parser, new[]{ "Prometheus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.CollectMetrics.Types.Response), global::Pluginv2.CollectMetrics.Types.Response.Parser, new[]{ "Metrics" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.CheckHealth), global::Pluginv2.CheckHealth.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.CheckHealth.Types.Request), global::Pluginv2.CheckHealth.Types.Request.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.CheckHealth.Types.Response), global::Pluginv2.CheckHealth.Types.Response.Parser, new[]{ "Status", "Info" }, null, new[]{ typeof(global::Pluginv2.CheckHealth.Types.Response.Types.HealthStatus) }, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.StreamingRequest), global::Pluginv2.StreamingRequest.Parser, new[]{ "PluginId", "Headers", "Topic", "Body", "Subscribed" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.StreamingMessage), global::Pluginv2.StreamingMessage.Parser, new[]{ "PluginId", "Topic", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.StreamingClose), global::Pluginv2.StreamingClose.Parser, new[]{ "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.RenderRequest), global::Pluginv2.RenderRequest.Parser, new[]{ "Url", "Width", "Height", "Timeout", "Timezone", "Encoding", "FilePath", "RenderKey", "Domain" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pluginv2.RenderResponse), global::Pluginv2.RenderResponse.Parser, new[]{ "Error" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DataSourceConfig : pb::IMessage<DataSourceConfig> {
    private static readonly pb::MessageParser<DataSourceConfig> _parser = new pb::MessageParser<DataSourceConfig>(() => new DataSourceConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSourceConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pluginv2.BackendReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceConfig(DataSourceConfig other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      url_ = other.url_;
      user_ = other.user_;
      database_ = other.database_;
      basicAuthEnabled_ = other.basicAuthEnabled_;
      basicAuthUser_ = other.basicAuthUser_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceConfig Clone() {
      return new DataSourceConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 6;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 7;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 8;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "basicAuthEnabled" field.</summary>
    public const int BasicAuthEnabledFieldNumber = 9;
    private bool basicAuthEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BasicAuthEnabled {
      get { return basicAuthEnabled_; }
      set {
        basicAuthEnabled_ = value;
      }
    }

    /// <summary>Field number for the "basicAuthUser" field.</summary>
    public const int BasicAuthUserFieldNumber = 10;
    private string basicAuthUser_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BasicAuthUser {
      get { return basicAuthUser_; }
      set {
        basicAuthUser_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSourceConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSourceConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Url != other.Url) return false;
      if (User != other.User) return false;
      if (Database != other.Database) return false;
      if (BasicAuthEnabled != other.BasicAuthEnabled) return false;
      if (BasicAuthUser != other.BasicAuthUser) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (BasicAuthEnabled != false) hash ^= BasicAuthEnabled.GetHashCode();
      if (BasicAuthUser.Length != 0) hash ^= BasicAuthUser.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Url);
      }
      if (User.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(User);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Database);
      }
      if (BasicAuthEnabled != false) {
        output.WriteRawTag(72);
        output.WriteBool(BasicAuthEnabled);
      }
      if (BasicAuthUser.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(BasicAuthUser);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (BasicAuthEnabled != false) {
        size += 1 + 1;
      }
      if (BasicAuthUser.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BasicAuthUser);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSourceConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.BasicAuthEnabled != false) {
        BasicAuthEnabled = other.BasicAuthEnabled;
      }
      if (other.BasicAuthUser.Length != 0) {
        BasicAuthUser = other.BasicAuthUser;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 32: {
            Id = input.ReadInt64();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            Url = input.ReadString();
            break;
          }
          case 58: {
            User = input.ReadString();
            break;
          }
          case 66: {
            Database = input.ReadString();
            break;
          }
          case 72: {
            BasicAuthEnabled = input.ReadBool();
            break;
          }
          case 82: {
            BasicAuthUser = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PluginConfig : pb::IMessage<PluginConfig> {
    private static readonly pb::MessageParser<PluginConfig> _parser = new pb::MessageParser<PluginConfig>(() => new PluginConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PluginConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pluginv2.BackendReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginConfig(PluginConfig other) : this() {
      orgId_ = other.orgId_;
      pluginId_ = other.pluginId_;
      pluginType_ = other.pluginType_;
      jsonData_ = other.jsonData_;
      decryptedSecureJsonData_ = other.decryptedSecureJsonData_.Clone();
      updatedMS_ = other.updatedMS_;
      datasourceConfig_ = other.datasourceConfig_ != null ? other.datasourceConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginConfig Clone() {
      return new PluginConfig(this);
    }

    /// <summary>Field number for the "orgId" field.</summary>
    public const int OrgIdFieldNumber = 1;
    private long orgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrgId {
      get { return orgId_; }
      set {
        orgId_ = value;
      }
    }

    /// <summary>Field number for the "pluginId" field.</summary>
    public const int PluginIdFieldNumber = 2;
    private string pluginId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PluginId {
      get { return pluginId_; }
      set {
        pluginId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pluginType" field.</summary>
    public const int PluginTypeFieldNumber = 3;
    private string pluginType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PluginType {
      get { return pluginType_; }
      set {
        pluginType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonData" field.</summary>
    public const int JsonDataFieldNumber = 4;
    private pb::ByteString jsonData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JsonData {
      get { return jsonData_; }
      set {
        jsonData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "decryptedSecureJsonData" field.</summary>
    public const int DecryptedSecureJsonDataFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_decryptedSecureJsonData_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 42);
    private readonly pbc::MapField<string, string> decryptedSecureJsonData_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> DecryptedSecureJsonData {
      get { return decryptedSecureJsonData_; }
    }

    /// <summary>Field number for the "updatedMS" field.</summary>
    public const int UpdatedMSFieldNumber = 6;
    private long updatedMS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UpdatedMS {
      get { return updatedMS_; }
      set {
        updatedMS_ = value;
      }
    }

    /// <summary>Field number for the "datasourceConfig" field.</summary>
    public const int DatasourceConfigFieldNumber = 7;
    private global::Pluginv2.DataSourceConfig datasourceConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pluginv2.DataSourceConfig DatasourceConfig {
      get { return datasourceConfig_; }
      set {
        datasourceConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PluginConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PluginConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrgId != other.OrgId) return false;
      if (PluginId != other.PluginId) return false;
      if (PluginType != other.PluginType) return false;
      if (JsonData != other.JsonData) return false;
      if (!DecryptedSecureJsonData.Equals(other.DecryptedSecureJsonData)) return false;
      if (UpdatedMS != other.UpdatedMS) return false;
      if (!object.Equals(DatasourceConfig, other.DatasourceConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrgId != 0L) hash ^= OrgId.GetHashCode();
      if (PluginId.Length != 0) hash ^= PluginId.GetHashCode();
      if (PluginType.Length != 0) hash ^= PluginType.GetHashCode();
      if (JsonData.Length != 0) hash ^= JsonData.GetHashCode();
      hash ^= DecryptedSecureJsonData.GetHashCode();
      if (UpdatedMS != 0L) hash ^= UpdatedMS.GetHashCode();
      if (datasourceConfig_ != null) hash ^= DatasourceConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrgId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OrgId);
      }
      if (PluginId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PluginId);
      }
      if (PluginType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PluginType);
      }
      if (JsonData.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(JsonData);
      }
      decryptedSecureJsonData_.WriteTo(output, _map_decryptedSecureJsonData_codec);
      if (UpdatedMS != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(UpdatedMS);
      }
      if (datasourceConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DatasourceConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrgId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrgId);
      }
      if (PluginId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PluginId);
      }
      if (PluginType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PluginType);
      }
      if (JsonData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(JsonData);
      }
      size += decryptedSecureJsonData_.CalculateSize(_map_decryptedSecureJsonData_codec);
      if (UpdatedMS != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdatedMS);
      }
      if (datasourceConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DatasourceConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PluginConfig other) {
      if (other == null) {
        return;
      }
      if (other.OrgId != 0L) {
        OrgId = other.OrgId;
      }
      if (other.PluginId.Length != 0) {
        PluginId = other.PluginId;
      }
      if (other.PluginType.Length != 0) {
        PluginType = other.PluginType;
      }
      if (other.JsonData.Length != 0) {
        JsonData = other.JsonData;
      }
      decryptedSecureJsonData_.Add(other.decryptedSecureJsonData_);
      if (other.UpdatedMS != 0L) {
        UpdatedMS = other.UpdatedMS;
      }
      if (other.datasourceConfig_ != null) {
        if (datasourceConfig_ == null) {
          DatasourceConfig = new global::Pluginv2.DataSourceConfig();
        }
        DatasourceConfig.MergeFrom(other.DatasourceConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OrgId = input.ReadInt64();
            break;
          }
          case 18: {
            PluginId = input.ReadString();
            break;
          }
          case 26: {
            PluginType = input.ReadString();
            break;
          }
          case 34: {
            JsonData = input.ReadBytes();
            break;
          }
          case 42: {
            decryptedSecureJsonData_.AddEntriesFrom(input, _map_decryptedSecureJsonData_codec);
            break;
          }
          case 48: {
            UpdatedMS = input.ReadInt64();
            break;
          }
          case 58: {
            if (datasourceConfig_ == null) {
              DatasourceConfig = new global::Pluginv2.DataSourceConfig();
            }
            input.ReadMessage(DatasourceConfig);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TimeRange : pb::IMessage<TimeRange> {
    private static readonly pb::MessageParser<TimeRange> _parser = new pb::MessageParser<TimeRange>(() => new TimeRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pluginv2.BackendReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeRange(TimeRange other) : this() {
      fromEpochMS_ = other.fromEpochMS_;
      toEpochMS_ = other.toEpochMS_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeRange Clone() {
      return new TimeRange(this);
    }

    /// <summary>Field number for the "fromEpochMS" field.</summary>
    public const int FromEpochMSFieldNumber = 1;
    private long fromEpochMS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FromEpochMS {
      get { return fromEpochMS_; }
      set {
        fromEpochMS_ = value;
      }
    }

    /// <summary>Field number for the "toEpochMS" field.</summary>
    public const int ToEpochMSFieldNumber = 2;
    private long toEpochMS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ToEpochMS {
      get { return toEpochMS_; }
      set {
        toEpochMS_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromEpochMS != other.FromEpochMS) return false;
      if (ToEpochMS != other.ToEpochMS) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromEpochMS != 0L) hash ^= FromEpochMS.GetHashCode();
      if (ToEpochMS != 0L) hash ^= ToEpochMS.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromEpochMS != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FromEpochMS);
      }
      if (ToEpochMS != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ToEpochMS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromEpochMS != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromEpochMS);
      }
      if (ToEpochMS != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToEpochMS);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeRange other) {
      if (other == null) {
        return;
      }
      if (other.FromEpochMS != 0L) {
        FromEpochMS = other.FromEpochMS;
      }
      if (other.ToEpochMS != 0L) {
        ToEpochMS = other.ToEpochMS;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromEpochMS = input.ReadInt64();
            break;
          }
          case 16: {
            ToEpochMS = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataQuery : pb::IMessage<DataQuery> {
    private static readonly pb::MessageParser<DataQuery> _parser = new pb::MessageParser<DataQuery>(() => new DataQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pluginv2.BackendReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataQuery(DataQuery other) : this() {
      refId_ = other.refId_;
      maxDataPoints_ = other.maxDataPoints_;
      intervalMS_ = other.intervalMS_;
      timeRange_ = other.timeRange_ != null ? other.timeRange_.Clone() : null;
      json_ = other.json_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataQuery Clone() {
      return new DataQuery(this);
    }

    /// <summary>Field number for the "refId" field.</summary>
    public const int RefIdFieldNumber = 1;
    private string refId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefId {
      get { return refId_; }
      set {
        refId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxDataPoints" field.</summary>
    public const int MaxDataPointsFieldNumber = 2;
    private long maxDataPoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxDataPoints {
      get { return maxDataPoints_; }
      set {
        maxDataPoints_ = value;
      }
    }

    /// <summary>Field number for the "intervalMS" field.</summary>
    public const int IntervalMSFieldNumber = 3;
    private long intervalMS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IntervalMS {
      get { return intervalMS_; }
      set {
        intervalMS_ = value;
      }
    }

    /// <summary>Field number for the "timeRange" field.</summary>
    public const int TimeRangeFieldNumber = 4;
    private global::Pluginv2.TimeRange timeRange_;
    /// <summary>
    /// NOTE: this moved from QueryRequest in v1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pluginv2.TimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "json" field.</summary>
    public const int JsonFieldNumber = 5;
    private pb::ByteString json_ = pb::ByteString.Empty;
    /// <summary>
    /// Arbitrary structure (model?  modelJson in v1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Json {
      get { return json_; }
      set {
        json_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RefId != other.RefId) return false;
      if (MaxDataPoints != other.MaxDataPoints) return false;
      if (IntervalMS != other.IntervalMS) return false;
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if (Json != other.Json) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RefId.Length != 0) hash ^= RefId.GetHashCode();
      if (MaxDataPoints != 0L) hash ^= MaxDataPoints.GetHashCode();
      if (IntervalMS != 0L) hash ^= IntervalMS.GetHashCode();
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      if (Json.Length != 0) hash ^= Json.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RefId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RefId);
      }
      if (MaxDataPoints != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxDataPoints);
      }
      if (IntervalMS != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(IntervalMS);
      }
      if (timeRange_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TimeRange);
      }
      if (Json.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Json);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RefId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefId);
      }
      if (MaxDataPoints != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxDataPoints);
      }
      if (IntervalMS != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IntervalMS);
      }
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      if (Json.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Json);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataQuery other) {
      if (other == null) {
        return;
      }
      if (other.RefId.Length != 0) {
        RefId = other.RefId;
      }
      if (other.MaxDataPoints != 0L) {
        MaxDataPoints = other.MaxDataPoints;
      }
      if (other.IntervalMS != 0L) {
        IntervalMS = other.IntervalMS;
      }
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          TimeRange = new global::Pluginv2.TimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      if (other.Json.Length != 0) {
        Json = other.Json;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RefId = input.ReadString();
            break;
          }
          case 16: {
            MaxDataPoints = input.ReadInt64();
            break;
          }
          case 24: {
            IntervalMS = input.ReadInt64();
            break;
          }
          case 34: {
            if (timeRange_ == null) {
              TimeRange = new global::Pluginv2.TimeRange();
            }
            input.ReadMessage(TimeRange);
            break;
          }
          case 42: {
            Json = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataQueryRequest : pb::IMessage<DataQueryRequest> {
    private static readonly pb::MessageParser<DataQueryRequest> _parser = new pb::MessageParser<DataQueryRequest>(() => new DataQueryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataQueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pluginv2.BackendReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataQueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataQueryRequest(DataQueryRequest other) : this() {
      config_ = other.config_ != null ? other.config_.Clone() : null;
      headers_ = other.headers_.Clone();
      queries_ = other.queries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataQueryRequest Clone() {
      return new DataQueryRequest(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    private global::Pluginv2.PluginConfig config_;
    /// <summary>
    /// Plugin Configuration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pluginv2.PluginConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_headers_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> headers_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Environment info
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "queries" field.</summary>
    public const int QueriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Pluginv2.DataQuery> _repeated_queries_codec
        = pb::FieldCodec.ForMessage(26, global::Pluginv2.DataQuery.Parser);
    private readonly pbc::RepeatedField<global::Pluginv2.DataQuery> queries_ = new pbc::RepeatedField<global::Pluginv2.DataQuery>();
    /// <summary>
    /// List of queries
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pluginv2.DataQuery> Queries {
      get { return queries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataQueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataQueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      if (!Headers.Equals(other.Headers)) return false;
      if(!queries_.Equals(other.queries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (config_ != null) hash ^= Config.GetHashCode();
      hash ^= Headers.GetHashCode();
      hash ^= queries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      headers_.WriteTo(output, _map_headers_codec);
      queries_.WriteTo(output, _repeated_queries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      size += headers_.CalculateSize(_map_headers_codec);
      size += queries_.CalculateSize(_repeated_queries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataQueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Pluginv2.PluginConfig();
        }
        Config.MergeFrom(other.Config);
      }
      headers_.Add(other.headers_);
      queries_.Add(other.queries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::Pluginv2.PluginConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 18: {
            headers_.AddEntriesFrom(input, _map_headers_codec);
            break;
          }
          case 26: {
            queries_.AddEntriesFrom(input, _repeated_queries_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataQueryResponse : pb::IMessage<DataQueryResponse> {
    private static readonly pb::MessageParser<DataQueryResponse> _parser = new pb::MessageParser<DataQueryResponse>(() => new DataQueryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataQueryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pluginv2.BackendReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataQueryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataQueryResponse(DataQueryResponse other) : this() {
      frames_ = other.frames_.Clone();
      metadata_ = other.metadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataQueryResponse Clone() {
      return new DataQueryResponse(this);
    }

    /// <summary>Field number for the "frames" field.</summary>
    public const int FramesFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_frames_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> frames_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// Arrow encoded DataFrames
    /// Each frame encodes its own: Errors, meta, and refId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Frames {
      get { return frames_; }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Additional response metadata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Metadata {
      get { return metadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataQueryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataQueryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!frames_.Equals(other.frames_)) return false;
      if (!Metadata.Equals(other.Metadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= frames_.GetHashCode();
      hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      frames_.WriteTo(output, _repeated_frames_codec);
      metadata_.WriteTo(output, _map_metadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += frames_.CalculateSize(_repeated_frames_codec);
      size += metadata_.CalculateSize(_map_metadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataQueryResponse other) {
      if (other == null) {
        return;
      }
      frames_.Add(other.frames_);
      metadata_.Add(other.metadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            frames_.AddEntriesFrom(input, _repeated_frames_codec);
            break;
          }
          case 18: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CallResource : pb::IMessage<CallResource> {
    private static readonly pb::MessageParser<CallResource> _parser = new pb::MessageParser<CallResource>(() => new CallResource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallResource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pluginv2.BackendReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallResource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallResource(CallResource other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallResource Clone() {
      return new CallResource(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallResource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallResource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallResource other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CallResource message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class StringList : pb::IMessage<StringList> {
        private static readonly pb::MessageParser<StringList> _parser = new pb::MessageParser<StringList>(() => new StringList());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StringList> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Pluginv2.CallResource.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringList() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringList(StringList other) : this() {
          values_ = other.values_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringList Clone() {
          return new StringList(this);
        }

        /// <summary>Field number for the "values" field.</summary>
        public const int ValuesFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_values_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> values_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Values {
          get { return values_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as StringList);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StringList other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!values_.Equals(other.values_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= values_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          values_.WriteTo(output, _repeated_values_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += values_.CalculateSize(_repeated_values_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StringList other) {
          if (other == null) {
            return;
          }
          values_.Add(other.values_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                values_.AddEntriesFrom(input, _repeated_values_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Pluginv2.CallResource.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          config_ = other.config_ != null ? other.config_.Clone() : null;
          path_ = other.path_;
          method_ = other.method_;
          url_ = other.url_;
          headers_ = other.headers_.Clone();
          body_ = other.body_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "config" field.</summary>
        public const int ConfigFieldNumber = 1;
        private global::Pluginv2.PluginConfig config_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Pluginv2.PluginConfig Config {
          get { return config_; }
          set {
            config_ = value;
          }
        }

        /// <summary>Field number for the "path" field.</summary>
        public const int PathFieldNumber = 2;
        private string path_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Path {
          get { return path_; }
          set {
            path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "method" field.</summary>
        public const int MethodFieldNumber = 3;
        private string method_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Method {
          get { return method_; }
          set {
            method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 4;
        private string url_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "headers" field.</summary>
        public const int HeadersFieldNumber = 5;
        private static readonly pbc::MapField<string, global::Pluginv2.CallResource.Types.StringList>.Codec _map_headers_codec
            = new pbc::MapField<string, global::Pluginv2.CallResource.Types.StringList>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Pluginv2.CallResource.Types.StringList.Parser), 42);
        private readonly pbc::MapField<string, global::Pluginv2.CallResource.Types.StringList> headers_ = new pbc::MapField<string, global::Pluginv2.CallResource.Types.StringList>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::Pluginv2.CallResource.Types.StringList> Headers {
          get { return headers_; }
        }

        /// <summary>Field number for the "body" field.</summary>
        public const int BodyFieldNumber = 6;
        private pb::ByteString body_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Body {
          get { return body_; }
          set {
            body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Config, other.Config)) return false;
          if (Path != other.Path) return false;
          if (Method != other.Method) return false;
          if (Url != other.Url) return false;
          if (!Headers.Equals(other.Headers)) return false;
          if (Body != other.Body) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (config_ != null) hash ^= Config.GetHashCode();
          if (Path.Length != 0) hash ^= Path.GetHashCode();
          if (Method.Length != 0) hash ^= Method.GetHashCode();
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          hash ^= Headers.GetHashCode();
          if (Body.Length != 0) hash ^= Body.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (config_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Config);
          }
          if (Path.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Path);
          }
          if (Method.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Method);
          }
          if (Url.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Url);
          }
          headers_.WriteTo(output, _map_headers_codec);
          if (Body.Length != 0) {
            output.WriteRawTag(50);
            output.WriteBytes(Body);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (config_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
          }
          if (Path.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
          }
          if (Method.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
          }
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          size += headers_.CalculateSize(_map_headers_codec);
          if (Body.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.config_ != null) {
            if (config_ == null) {
              Config = new global::Pluginv2.PluginConfig();
            }
            Config.MergeFrom(other.Config);
          }
          if (other.Path.Length != 0) {
            Path = other.Path;
          }
          if (other.Method.Length != 0) {
            Method = other.Method;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
          headers_.Add(other.headers_);
          if (other.Body.Length != 0) {
            Body = other.Body;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (config_ == null) {
                  Config = new global::Pluginv2.PluginConfig();
                }
                input.ReadMessage(Config);
                break;
              }
              case 18: {
                Path = input.ReadString();
                break;
              }
              case 26: {
                Method = input.ReadString();
                break;
              }
              case 34: {
                Url = input.ReadString();
                break;
              }
              case 42: {
                headers_.AddEntriesFrom(input, _map_headers_codec);
                break;
              }
              case 50: {
                Body = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Pluginv2.CallResource.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          code_ = other.code_;
          headers_ = other.headers_.Clone();
          body_ = other.body_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 1;
        private int code_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Code {
          get { return code_; }
          set {
            code_ = value;
          }
        }

        /// <summary>Field number for the "headers" field.</summary>
        public const int HeadersFieldNumber = 2;
        private static readonly pbc::MapField<string, global::Pluginv2.CallResource.Types.StringList>.Codec _map_headers_codec
            = new pbc::MapField<string, global::Pluginv2.CallResource.Types.StringList>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Pluginv2.CallResource.Types.StringList.Parser), 18);
        private readonly pbc::MapField<string, global::Pluginv2.CallResource.Types.StringList> headers_ = new pbc::MapField<string, global::Pluginv2.CallResource.Types.StringList>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::Pluginv2.CallResource.Types.StringList> Headers {
          get { return headers_; }
        }

        /// <summary>Field number for the "body" field.</summary>
        public const int BodyFieldNumber = 3;
        private pb::ByteString body_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Body {
          get { return body_; }
          set {
            body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Code != other.Code) return false;
          if (!Headers.Equals(other.Headers)) return false;
          if (Body != other.Body) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Code != 0) hash ^= Code.GetHashCode();
          hash ^= Headers.GetHashCode();
          if (Body.Length != 0) hash ^= Body.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Code != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Code);
          }
          headers_.WriteTo(output, _map_headers_codec);
          if (Body.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Body);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Code != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
          }
          size += headers_.CalculateSize(_map_headers_codec);
          if (Body.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.Code != 0) {
            Code = other.Code;
          }
          headers_.Add(other.headers_);
          if (other.Body.Length != 0) {
            Body = other.Body;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Code = input.ReadInt32();
                break;
              }
              case 18: {
                headers_.AddEntriesFrom(input, _map_headers_codec);
                break;
              }
              case 26: {
                Body = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class CollectMetrics : pb::IMessage<CollectMetrics> {
    private static readonly pb::MessageParser<CollectMetrics> _parser = new pb::MessageParser<CollectMetrics>(() => new CollectMetrics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectMetrics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pluginv2.BackendReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectMetrics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectMetrics(CollectMetrics other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectMetrics Clone() {
      return new CollectMetrics(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectMetrics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectMetrics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectMetrics other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CollectMetrics message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Pluginv2.CollectMetrics.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class Payload : pb::IMessage<Payload> {
        private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Payload> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Pluginv2.CollectMetrics.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload(Payload other) : this() {
          prometheus_ = other.prometheus_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload Clone() {
          return new Payload(this);
        }

        /// <summary>Field number for the "prometheus" field.</summary>
        public const int PrometheusFieldNumber = 1;
        private pb::ByteString prometheus_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Prometheus {
          get { return prometheus_; }
          set {
            prometheus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Payload);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Payload other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Prometheus != other.Prometheus) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Prometheus.Length != 0) hash ^= Prometheus.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Prometheus.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Prometheus);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Prometheus.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Prometheus);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Payload other) {
          if (other == null) {
            return;
          }
          if (other.Prometheus.Length != 0) {
            Prometheus = other.Prometheus;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Prometheus = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Pluginv2.CollectMetrics.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          metrics_ = other.metrics_ != null ? other.metrics_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "metrics" field.</summary>
        public const int MetricsFieldNumber = 1;
        private global::Pluginv2.CollectMetrics.Types.Payload metrics_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Pluginv2.CollectMetrics.Types.Payload Metrics {
          get { return metrics_; }
          set {
            metrics_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Metrics, other.Metrics)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (metrics_ != null) hash ^= Metrics.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (metrics_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Metrics);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (metrics_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metrics);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.metrics_ != null) {
            if (metrics_ == null) {
              Metrics = new global::Pluginv2.CollectMetrics.Types.Payload();
            }
            Metrics.MergeFrom(other.Metrics);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (metrics_ == null) {
                  Metrics = new global::Pluginv2.CollectMetrics.Types.Payload();
                }
                input.ReadMessage(Metrics);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class CheckHealth : pb::IMessage<CheckHealth> {
    private static readonly pb::MessageParser<CheckHealth> _parser = new pb::MessageParser<CheckHealth>(() => new CheckHealth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckHealth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pluginv2.BackendReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckHealth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckHealth(CheckHealth other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckHealth Clone() {
      return new CheckHealth(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckHealth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckHealth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckHealth other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CheckHealth message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Pluginv2.CheckHealth.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Pluginv2.CheckHealth.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          status_ = other.status_;
          info_ = other.info_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 1;
        private global::Pluginv2.CheckHealth.Types.Response.Types.HealthStatus status_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Pluginv2.CheckHealth.Types.Response.Types.HealthStatus Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        /// <summary>Field number for the "info" field.</summary>
        public const int InfoFieldNumber = 2;
        private string info_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Info {
          get { return info_; }
          set {
            info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Status != other.Status) return false;
          if (Info != other.Info) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Status != 0) hash ^= Status.GetHashCode();
          if (Info.Length != 0) hash ^= Info.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Status != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Status);
          }
          if (Info.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Info);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Status != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
          }
          if (Info.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.Status != 0) {
            Status = other.Status;
          }
          if (other.Info.Length != 0) {
            Info = other.Info;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Status = (global::Pluginv2.CheckHealth.Types.Response.Types.HealthStatus) input.ReadEnum();
                break;
              }
              case 18: {
                Info = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Response message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum HealthStatus {
            /// <summary>
            /// starting etc
            /// </summary>
            [pbr::OriginalName("UNKNOWN")] Unknown = 0,
            [pbr::OriginalName("OK")] Ok = 1,
            [pbr::OriginalName("ERROR")] Error = 2,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class StreamingRequest : pb::IMessage<StreamingRequest> {
    private static readonly pb::MessageParser<StreamingRequest> _parser = new pb::MessageParser<StreamingRequest>(() => new StreamingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pluginv2.BackendReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingRequest(StreamingRequest other) : this() {
      pluginId_ = other.pluginId_;
      headers_ = other.headers_.Clone();
      topic_ = other.topic_;
      body_ = other.body_;
      subscribed_ = other.subscribed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingRequest Clone() {
      return new StreamingRequest(this);
    }

    /// <summary>Field number for the "pluginId" field.</summary>
    public const int PluginIdFieldNumber = 1;
    private long pluginId_;
    /// <summary>
    /// match the id from connect request (app or datasource)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PluginId {
      get { return pluginId_; }
      set {
        pluginId_ = value;
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_headers_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> headers_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Environment info
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 3;
    private string topic_ = "";
    /// <summary>
    /// The topic we are talking to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 4;
    private string body_ = "";
    /// <summary>
    /// The message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subscribed" field.</summary>
    public const int SubscribedFieldNumber = 5;
    private bool subscribed_;
    /// <summary>
    /// Flag if the user is already listening
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Subscribed {
      get { return subscribed_; }
      set {
        subscribed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PluginId != other.PluginId) return false;
      if (!Headers.Equals(other.Headers)) return false;
      if (Topic != other.Topic) return false;
      if (Body != other.Body) return false;
      if (Subscribed != other.Subscribed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PluginId != 0L) hash ^= PluginId.GetHashCode();
      hash ^= Headers.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (Subscribed != false) hash ^= Subscribed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PluginId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PluginId);
      }
      headers_.WriteTo(output, _map_headers_codec);
      if (Topic.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Topic);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Body);
      }
      if (Subscribed != false) {
        output.WriteRawTag(40);
        output.WriteBool(Subscribed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PluginId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PluginId);
      }
      size += headers_.CalculateSize(_map_headers_codec);
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (Subscribed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamingRequest other) {
      if (other == null) {
        return;
      }
      if (other.PluginId != 0L) {
        PluginId = other.PluginId;
      }
      headers_.Add(other.headers_);
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.Subscribed != false) {
        Subscribed = other.Subscribed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PluginId = input.ReadInt64();
            break;
          }
          case 18: {
            headers_.AddEntriesFrom(input, _map_headers_codec);
            break;
          }
          case 26: {
            Topic = input.ReadString();
            break;
          }
          case 34: {
            Body = input.ReadString();
            break;
          }
          case 40: {
            Subscribed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamingMessage : pb::IMessage<StreamingMessage> {
    private static readonly pb::MessageParser<StreamingMessage> _parser = new pb::MessageParser<StreamingMessage>(() => new StreamingMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamingMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pluginv2.BackendReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingMessage(StreamingMessage other) : this() {
      pluginId_ = other.pluginId_;
      topic_ = other.topic_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingMessage Clone() {
      return new StreamingMessage(this);
    }

    /// <summary>Field number for the "pluginId" field.</summary>
    public const int PluginIdFieldNumber = 1;
    private long pluginId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PluginId {
      get { return pluginId_; }
      set {
        pluginId_ = value;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private string topic_ = "";
    /// <summary>
    /// will be broadcast to eveyone listening to this app|ds + topic
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    /// <summary>
    /// JSON Blob
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamingMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamingMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PluginId != other.PluginId) return false;
      if (Topic != other.Topic) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PluginId != 0L) hash ^= PluginId.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PluginId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PluginId);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Topic);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PluginId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PluginId);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamingMessage other) {
      if (other == null) {
        return;
      }
      if (other.PluginId != 0L) {
        PluginId = other.PluginId;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PluginId = input.ReadInt64();
            break;
          }
          case 18: {
            Topic = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamingClose : pb::IMessage<StreamingClose> {
    private static readonly pb::MessageParser<StreamingClose> _parser = new pb::MessageParser<StreamingClose>(() => new StreamingClose());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamingClose> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pluginv2.BackendReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingClose() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingClose(StreamingClose other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingClose Clone() {
      return new StreamingClose(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private long count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamingClose);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamingClose other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamingClose other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RenderRequest : pb::IMessage<RenderRequest> {
    private static readonly pb::MessageParser<RenderRequest> _parser = new pb::MessageParser<RenderRequest>(() => new RenderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RenderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pluginv2.BackendReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenderRequest(RenderRequest other) : this() {
      url_ = other.url_;
      width_ = other.width_;
      height_ = other.height_;
      timeout_ = other.timeout_;
      timezone_ = other.timezone_;
      encoding_ = other.encoding_;
      filePath_ = other.filePath_;
      renderKey_ = other.renderKey_;
      domain_ = other.domain_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenderRequest Clone() {
      return new RenderRequest(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 2;
    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 3;
    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 4;
    private int timeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 5;
    private string timezone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Timezone {
      get { return timezone_; }
      set {
        timezone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encoding" field.</summary>
    public const int EncodingFieldNumber = 6;
    private string encoding_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Encoding {
      get { return encoding_; }
      set {
        encoding_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filePath" field.</summary>
    public const int FilePathFieldNumber = 7;
    private string filePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "renderKey" field.</summary>
    public const int RenderKeyFieldNumber = 8;
    private string renderKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RenderKey {
      get { return renderKey_; }
      set {
        renderKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 9;
    private string domain_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RenderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RenderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Timeout != other.Timeout) return false;
      if (Timezone != other.Timezone) return false;
      if (Encoding != other.Encoding) return false;
      if (FilePath != other.FilePath) return false;
      if (RenderKey != other.RenderKey) return false;
      if (Domain != other.Domain) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Timeout != 0) hash ^= Timeout.GetHashCode();
      if (Timezone.Length != 0) hash ^= Timezone.GetHashCode();
      if (Encoding.Length != 0) hash ^= Encoding.GetHashCode();
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      if (RenderKey.Length != 0) hash ^= RenderKey.GetHashCode();
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (Width != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Height);
      }
      if (Timeout != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Timeout);
      }
      if (Timezone.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Timezone);
      }
      if (Encoding.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Encoding);
      }
      if (FilePath.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(FilePath);
      }
      if (RenderKey.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RenderKey);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Domain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (Timeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timeout);
      }
      if (Timezone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timezone);
      }
      if (Encoding.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Encoding);
      }
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (RenderKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RenderKey);
      }
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RenderRequest other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Timeout != 0) {
        Timeout = other.Timeout;
      }
      if (other.Timezone.Length != 0) {
        Timezone = other.Timezone;
      }
      if (other.Encoding.Length != 0) {
        Encoding = other.Encoding;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      if (other.RenderKey.Length != 0) {
        RenderKey = other.RenderKey;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 16: {
            Width = input.ReadInt32();
            break;
          }
          case 24: {
            Height = input.ReadInt32();
            break;
          }
          case 32: {
            Timeout = input.ReadInt32();
            break;
          }
          case 42: {
            Timezone = input.ReadString();
            break;
          }
          case 50: {
            Encoding = input.ReadString();
            break;
          }
          case 58: {
            FilePath = input.ReadString();
            break;
          }
          case 66: {
            RenderKey = input.ReadString();
            break;
          }
          case 74: {
            Domain = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RenderResponse : pb::IMessage<RenderResponse> {
    private static readonly pb::MessageParser<RenderResponse> _parser = new pb::MessageParser<RenderResponse>(() => new RenderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RenderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pluginv2.BackendReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenderResponse(RenderResponse other) : this() {
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenderResponse Clone() {
      return new RenderResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RenderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RenderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RenderResponse other) {
      if (other == null) {
        return;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
